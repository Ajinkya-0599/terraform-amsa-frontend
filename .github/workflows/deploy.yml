name: CI/CD Deploy with CloudFormation

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout Frontend
    - name: Checkout Frontend
      uses: actions/checkout@v3
      with:
        repository: 'Ajinkya-0599/frontend-amsa-ajinkya'
        path: frontend

    # 2️⃣ Checkout Backend
    - name: Checkout Backend
      uses: actions/checkout@v3
      with:
        repository: 'Ajinkya-0599/backend-amsa-ajinkya'
        path: backend

    # 3️⃣ Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # 4️⃣ Build Frontend
    - name: Build Frontend
      working-directory: frontend
      run: |
        npm install
        npm run build

    # 5️⃣ Prepare Backend
    - name: Build Backend
      working-directory: backend
      run: npm install

    # 6️⃣ Deploy CloudFormation Stack
    - name: Deploy CloudFormation Stack
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: amsa-stack
        template: ./frontend/cloudformation/amsa-stack.yml   # <-- corrected path
        no-fail-on-empty-changeset: true
        capabilities: CAPABILITY_NAMED_IAM
        parameter-overrides: KeyName=${{ secrets.EC2_KEY_NAME }} 
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # 7️⃣ Get EC2 Instance IP from Tag Name
    - name: Get EC2 Public IP
      id: get_ip
      run: |
        INSTANCE_IP=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=Amsa-EC2-Instance" "Name=instance-state-name,Values=running" \
          --query "Reservations[0].Instances[0].PublicIpAddress" \
          --output text \
          --region ${{ secrets.AWS_REGION }})
        echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    # 8️⃣ Deploy Frontend & Backend to EC2
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ env.INSTANCE_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Clone repos if not present
          [ ! -d "/home/ubuntu/frontend-amsa-ajinkya" ] && git clone https://github.com/Ajinkya-0599/frontend-amsa-ajinkya.git /home/ubuntu/frontend-amsa-ajinkya
          [ ! -d "/home/ubuntu/backend-amsa-ajinkya" ] && git clone https://github.com/Ajinkya-0599/backend-amsa-ajinkya.git /home/ubuntu/backend-amsa-ajinkya

          # Pull latest changes
          cd /home/ubuntu/frontend-amsa-ajinkya && git pull origin main
          cd /home/ubuntu/backend-amsa-ajinkya && git pull origin main

          # Frontend setup
          cd /home/ubuntu/frontend-amsa-ajinkya
          npm install
          npm run build
          npm run export || true
          sudo rm -rf /var/www/frontend-amsa-ajinkya
          sudo mkdir -p /var/www/frontend-amsa-ajinkya
          sudo cp -r out/* /var/www/frontend-amsa-ajinkya/

          # Backend setup
          cd /home/ubuntu/backend-amsa-ajinkya
          npm install
          pm2 restart amsa-backend || pm2 start server.js --name amsa-backend --watch

          # Reload services
          sudo nginx -t
          sudo systemctl restart nginx
          pm2 save
      env:
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
